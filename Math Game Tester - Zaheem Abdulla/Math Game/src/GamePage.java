
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.TimerTask;
import java.util.Timer;
import javax.swing.JOptionPane;
import java.util.concurrent.ThreadLocalRandom;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author zammu
 */
public class GamePage extends javax.swing.JFrame 
{

    int time = 0, i = 0, l = 0, tc = 0;
    
    /**
     * Creates new form GamePage
     */
    public GamePage() 
    {
        initComponents();
    }

    public GamePage(String selectedOperation, String playerName) 
    {
        initComponents();
        jLabel10.setVisible(false);

        jTextField2.setText(playerName);
        jTextField3.setText(selectedOperation);
        
        String a = selectedOperation;
        
        switch(a)
        {
            case "ae":
                
                String ae = "Addition - Easy";
                jTextField3.setText(ae);
                break;
            
            case "se":
                
                String se = "Subtraction - Easy";
                jTextField3.setText(se);
                break;
            
            case "me":
                
                String me = "Multiplication - Easy";
                jTextField3.setText(me);
                break;
        
            case "de":
                
                String de = "Divition - Easy";
                jTextField3.setText(de);
                break;
            
            case "an":
                
                String an = "Addition - Normal";
                jTextField3.setText(an);
                break;
            
            case "sn":
                
                String sn = "Subtraction - Normal";
                jTextField3.setText(sn);
                break;
            
            case "mn":
                
                String mn = "Multiplication - Normal";
                jTextField3.setText(mn);
                break;
        
            case "dn":
                
                String dn = "Divition - Normal";
                jTextField3.setText(dn);
                break;
        
            case "ah":
                
                String ah = "Addition - Hard";
                jTextField3.setText(ah);
                break;
            
            case "sh":
                
                String sh = "Subtraction - Hard";
                jTextField3.setText(sh);
                break;
            
            case "mh":
                
                String mh = "Multiplication - Hard";
                jTextField3.setText(mh);
                break;
        
            case "dh":
                
                String dh = "Divition - Hard";
                jTextField3.setText(dh);
                break;
        }
        
        try 
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/mathgame", "root","i");
            
            Statement st = con.createStatement();
            String query = "SELECT * FROM accounts where (Name) = ('"+playerName+"');";
            ResultSet rs = st.executeQuery(query);
            
            if(rs.next())
            {
                String highScore = String.valueOf(rs.getString("Highscore"));
                String number = String.valueOf(rs.getString("UserNo"));
                label8.setText(highScore);
                jLabel10.setText(number);
            }
            else
            {
                if (jTextField2.getText().equals("Guest"))
                {
                    JOptionPane.showMessageDialog(null, "You are playing with a Guest account so no proggress will be stored"); 
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "There has been an error"); 
                } 
            }
        } 
        catch (ClassNotFoundException | SQLException ex) 
        {
            Logger.getLogger(GamePage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        loadQuestions();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        label5 = new java.awt.Label();
        label6 = new java.awt.Label();
        jLabel6 = new javax.swing.JLabel();
        label7 = new java.awt.Label();
        jTextField2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        label8 = new java.awt.Label();
        label9 = new java.awt.Label();
        label10 = new java.awt.Label();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Answer Here -");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Results -");

        jLabel3.setText("Number of Correct Answers -");

        jLabel4.setText("Number of Wrong Answers -");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Score -");

        jButton1.setText("Enter Answer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        label2.setAlignment(java.awt.Label.CENTER);
        label2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label2.setName(""); // NOI18N
        label2.setText("0");

        label3.setAlignment(java.awt.Label.CENTER);
        label3.setFont(new java.awt.Font("Courier Std", 0, 48)); // NOI18N
        label3.setText("Questions");

        label4.setAlignment(java.awt.Label.CENTER);
        label4.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        label4.setPreferredSize(new java.awt.Dimension(51, 20));
        label4.setText("1");

        label5.setAlignment(java.awt.Label.CENTER);
        label5.setName(""); // NOI18N
        label5.setText("0");

        label6.setAlignment(java.awt.Label.CENTER);
        label6.setName(""); // NOI18N
        label6.setText("0");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Time Remaining -");

        label7.setAlignment(java.awt.Label.CENTER);
        label7.setText("60 sec");
        label7.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                label7PropertyChange(evt);
            }
        });

        jTextField2.setEditable(false);

        jLabel7.setText("Player Name :");

        jTextField3.setEditable(false);
        jTextField3.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel8.setText("Selected Operation :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Highscore -");

        label8.setAlignment(java.awt.Label.CENTER);
        label8.setName(""); // NOI18N
        label8.setText("0");

        label9.setAlignment(java.awt.Label.CENTER);
        label9.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        label9.setPreferredSize(new java.awt.Dimension(51, 20));
        label9.setText("3");

        label10.setAlignment(java.awt.Label.CENTER);
        label10.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        label10.setPreferredSize(new java.awt.Dimension(51, 20));
        label10.setText("2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel2)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(label6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(74, 74, 74))
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(label8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(label5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(label6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 28, Short.MAX_VALUE)))
                .addComponent(jButton2)
                .addGap(29, 29, 29))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loadQuestions()
    {
        int evalue1 = ThreadLocalRandom.current().nextInt(1, 16); 
        int evalue2 = ThreadLocalRandom.current().nextInt(51, 66);
        
        int nvalue1 = ThreadLocalRandom.current().nextInt(1, 31); 
        int nvalue2 = ThreadLocalRandom.current().nextInt(51, 81); 
        
        int hvalue1 = ThreadLocalRandom.current().nextInt(1, 51); 
        int hvalue2 = ThreadLocalRandom.current().nextInt(51, 101); 
        
        try 
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/mathgame", "root","i");
                
            Statement st = con.createStatement();
            Statement st2 = con.createStatement();
            Statement st3 = con.createStatement();
            String query = "SELECT * FROM mathgame.mathquestion;";
            ResultSet rs = st.executeQuery(query);
            
            String query2, query3;
            ResultSet rs2, rs3;
            
            if(rs.next())
            {
                String a = jTextField3.getText();
                
                switch(a)
                {
                    case "Addition - Easy":
                        label10.setText("+");
                        
                        query2 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+evalue1+");";
                        rs2 = st2.executeQuery(query2);
                        if(rs2.next())
                        {
                            String value1 = rs2.getString("Questions"); 
                            label4.setText(value1);
                        }
                        
                        query3 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+evalue2+");";
                        rs3 = st3.executeQuery(query3);
                        if(rs3.next())
                        {
                            String value2 = rs3.getString("Questions"); 
                            label9.setText(value2);
                        }
                        
                        break;

                    case "Subtraction - Easy":
                        
                        
                        query2 = "SELECT * FROM mathquestion where (Sno) = ("+evalue1+");";
                        rs2 = st2.executeQuery(query2);
                        if(rs2.next())
                        {
                            label10.setText("-");
                            String value1 = rs2.getString("Questions"); 
                            label4.setText(value1);
                        }
                        
                        query3 = "SELECT * FROM mathquestion where (Sno) = ("+evalue2+");";
                        rs3 = st3.executeQuery(query3);
                        if(rs3.next())
                        {
                            String value2 = rs3.getString("Questions"); 
                            label9.setText(value2);
                        }
                        break;

                    case "Multiplication - Easy":
                        label10.setText("×");
                        
                        query2 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+evalue1+");";
                        rs2 = st2.executeQuery(query2);
                        if(rs2.next())
                        {
                            String value1 = rs2.getString("Questions"); 
                            label4.setText(value1);
                        }
                        
                        query3 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+evalue2+");";
                        rs3 = st3.executeQuery(query3);
                        if(rs3.next())
                        {
                            String value2 = rs3.getString("Questions"); 
                            label9.setText(value2);
                        }
                        break;

                    case "Divition - Easy":
                        label10.setText("÷");
                        
                        query2 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+evalue1+");";
                        rs2 = st2.executeQuery(query2);
                        if(rs2.next())
                        {
                            String value1 = rs2.getString("Questions"); 
                            label4.setText(value1);
                        }
                        
                        query3 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+evalue2+");";
                        rs3 = st3.executeQuery(query3);
                        if(rs3.next())
                        {
                            String value2 = rs3.getString("Questions"); 
                            label9.setText(value2);
                        }
                        break;

                    case "Addition - Normal":
                        label10.setText("+");
                        
                        query2 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+nvalue1+");";
                        rs2 = st2.executeQuery(query2);
                        if(rs2.next())
                        {
                            String value1 = rs2.getString("Questions"); 
                            label4.setText(value1);
                        }
                        
                        query3 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+nvalue2+");";
                        rs3 = st3.executeQuery(query3);
                        if(rs3.next())
                        {
                            String value2 = rs3.getString("Questions"); 
                            label9.setText(value2);
                        }
                        break;

                    case "Subtraction - Normal":
                        label10.setText("-");
                        
                        query2 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+nvalue1+");";
                        rs2 = st2.executeQuery(query2);
                        if(rs2.next())
                        {
                            String value1 = rs2.getString("Questions"); 
                            label4.setText(value1);
                        }
                        
                        query3 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+nvalue2+");";
                        rs3 = st3.executeQuery(query3);
                        if(rs3.next())
                        {
                            String value2 = rs3.getString("Questions"); 
                            label9.setText(value2);
                        }
                        break;
                        
                    case "Multiplication - Normal":
                        label10.setText("×");
                        
                        query2 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+nvalue1+");";
                        rs2 = st2.executeQuery(query2);
                        if(rs2.next())
                        {
                            String value1 = rs2.getString("Questions"); 
                            label4.setText(value1);
                        }
                        
                        query3 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+nvalue2+");";
                        rs3 = st3.executeQuery(query3);
                        if(rs3.next())
                        {
                            String value2 = rs3.getString("Questions"); 
                            label9.setText(value2);
                        }
                        break;

                    case "Divition - Normal":
                        label10.setText("÷");
                        
                        query2 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+nvalue1+");";
                        rs2 = st2.executeQuery(query2);
                        if(rs2.next())
                        {
                            String value1 = rs2.getString("Questions"); 
                            label4.setText(value1);
                        }
                        
                        query3 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+nvalue2+");";
                        rs3 = st3.executeQuery(query3);
                        if(rs3.next())
                        {
                            String value2 = rs3.getString("Questions"); 
                            label9.setText(value2);
                        }
                        break;

                    case "Addition - Hard":
                        label10.setText("+");
                        
                        query2 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+hvalue1+");";
                        rs2 = st2.executeQuery(query2);
                        if(rs2.next())
                        {
                            String value1 = rs2.getString("Questions"); 
                            label4.setText(value1);
                        }
                        
                        query3 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+hvalue2+");";
                        rs3 = st3.executeQuery(query3);
                        if(rs3.next())
                        {
                            String value2 = rs3.getString("Questions"); 
                            label9.setText(value2);
                        }
                        break;

                    case "Subtraction - Hard":
                        label10.setText("-");
                        
                        query2 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+hvalue1+");";
                        rs2 = st2.executeQuery(query2);
                        if(rs2.next())
                        {
                            String value1 = rs2.getString("Questions"); 
                            label4.setText(value1);
                        }
                        
                        query3 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+hvalue2+");";
                        rs3 = st3.executeQuery(query3);
                        if(rs3.next())
                        {
                            String value2 = rs3.getString("Questions"); 
                            label9.setText(value2);
                        }
                        break;

                    case "Multiplication - Hard":
                        label10.setText("×");
                        
                        query2 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+hvalue1+");";
                        rs2 = st2.executeQuery(query2);
                        if(rs2.next())
                        {
                            String value1 = rs2.getString("Questions"); 
                            label4.setText(value1);
                        }
                        
                        query3 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+hvalue2+");";
                        rs3 = st3.executeQuery(query3);
                        if(rs3.next())
                        {
                            String value2 = rs3.getString("Questions"); 
                            label9.setText(value2);
                        }
                        break;

                    case "Divition - Hard":
                        label10.setText("÷");
                        
                        query2 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+hvalue1+");";
                        rs2 = st2.executeQuery(query2);
                        if(rs2.next())
                        {
                            String value1 = rs2.getString("Questions"); 
                            label4.setText(value1);
                        }
                        
                        query3 = "SELECT * FROM mathgame.mathquestion where (Sno) = ("+hvalue2+");";
                        rs3 = st3.executeQuery(query3);
                        if(rs3.next())
                        {
                            String value2 = rs3.getString("Questions"); 
                            label9.setText(value2);
                        }
                        break;
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "There has been an error");
                jTextField1.setText("");
            }
        } 
        catch (ClassNotFoundException | SQLException ex) 
        {
            Logger.getLogger(LogInPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void label7PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_label7PropertyChange
        // TODO add your handling code here:
        
        time = 59;
        Timer timer = new Timer();
        TimerTask task = new TimerTask() 
        {
            public void run() 
            {
                label7.setText(""+Integer.toString(time)+" sec");
                time--;
                if (time == -1)
                {
                    timer.cancel();
                    JOptionPane.showMessageDialog(null, "Time Over! To continue press Exit");

                    String name = jLabel10.getText();
                    
                    int a = Integer.parseInt(label2.getText());
                    int b = Integer.parseInt(label8.getText());   

                    if (a > b)
                    {
                        JOptionPane.showMessageDialog(null, "Its a new High Score!");
                        try 
                        {
                            Class.forName("com.mysql.cj.jdbc.Driver");
                            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/mathgame", "root","i");

                            Statement st = con.createStatement();
                            String query = "UPDATE accounts SET Highscore = ("+label2.getText()+") WHERE (UserNo = ("+name+"));";
                            st.executeUpdate(query);
                        }
                        catch (ClassNotFoundException | SQLException ex)
                        {
                            Logger.getLogger(GamePage.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    jButton1.setVisible(false);
                }
            }
            
        };
        
        timer.scheduleAtFixedRate(task, 1000, 1000);
    }//GEN-LAST:event_label7PropertyChange

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new HomePage().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jTextField1.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter the answer");
        }
        else
        {
            String sign = label10.getText();
            String n1 = label4.getText();
            String n2 = label9.getText();

            int num1 = Integer.parseInt(n1);
            int num2 = Integer.parseInt(n2);
            int ans = Integer.parseInt(jTextField1.getText());

            int output;

            switch(sign)
            {
                case "+":
                    output = num1 + num2;

                    if (output == ans) 
                    {
                        i++;
                        tc++;
                    }
                    else
                    {
                        l++;
                        tc--;
                    }
                    break;

                case "-":
                    output = num1 - num2;

                    if (output == ans) 
                    {
                        i++;
                        tc++;
                    }
                    else
                    {
                        l++;
                        tc--;
                    }
                    break;

                case "×":
                    output = num1 * num2;

                    if (output == ans) 
                    {
                        i++;
                        tc++;
                    }
                    else
                    {
                        l++;
                        tc--;
                    }
                    break;

                case "÷":
                    output = num1 / num2;

                    if (output == ans) 
                    {
                        i++;
                        tc++;
                    }
                    else
                    {
                        l++;
                        tc--;
                    }
                    break;
            }

            label5.setText(Integer.toString(i));
            label6.setText(Integer.toString(l));
            label2.setText(Integer.toString(tc));
            jTextField1.setText("");

            loadQuestions();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed

    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        char text = evt.getKeyChar();
        if(!(Character.isDigit(text)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) 
        {
            java.util.logging.Logger.getLogger(GamePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GamePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private java.awt.Label label10;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    // End of variables declaration//GEN-END:variables
}
